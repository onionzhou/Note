

'''
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21
注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2**31,  2**31 − 1]。请根据这个假设，
如果反转后整数溢出那么就返回 0。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reverse-integer
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
'''
'''
    分析：
    int 取值范围[-2**31,2*31-1] --> [-2147483648,2147483647]
    
    数据反转 --->栈这种数据结构可以实现
    数字反转可以用10 取余的操作  123 %10 = 3 ，达到栈的反转
    
    python：存储数字理论上是无限长度，因此每次计算完后判断res与of的大小关系即可
    python:  //  操作是向下取整，导致 正负数 % 取余的值不一样，所以 负数 需要转换为正数
    
    In [14]: -53 //10
    Out[14]: -6
    
    In [15]: 53 //10
    Out[15]: 5
    
    In [16]: 53 %10
    Out[16]: 3
    
    In [17]: -53 %10
    Out[17]: 7
    
'''


def reverse(x: int) -> int:
    y, res = abs(x), 0
    offset = (1 << 31) - 1 if x > 0 else 1 << 31 #x  为正数 (1<<31) -1,X 为负数  1<<31
    while y != 0:
        res = res * 10 + y % 10
        if res > offset: return 0  # 溢出
        y //= 10
    return res if x > 0 else -res

if __name__ == '__main__':
    num = -21474836
    print(reverse(num))